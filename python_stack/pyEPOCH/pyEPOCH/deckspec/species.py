from . import shared

blockName = 'species'
blockDef = {
	'mandatory'    :False,
	'allowMultiple':True,
	'parameters'   :[
		{ 'name'        :'name',
		  'dType'       :str,
		  'mandatory'   :True },
		{ 'name'        :'charge',
		  'dType'       :float,
		  'mandatory'   :True },
		{ 'name'        :'mass',
		  'dType'       :float,
		  'mandatory'   :True,
		  'verification':lambda x: x>0.0 },
			{ 'name'        :'npart',
		  'dType'       :int,
		  'mandatory'   :True,
		  'verification':lambda x: x>0,
		  'alternatives':[('species','frac'),('species','npart_per_cell'),('control','npart')] },
		{ 'name'        :'frac',
		  'dType'       :float,
		  'mandatory'   :True,
		  'verification':lambda x: x>0.0 and x<=1.0,
		  'alternatives':[('species','npart'),('species','npart_per_cell'),('control','npart')] },
		{ 'name'        :'npart_per_cell',
		  'dType'       :int,
		  'mandatory'   :True,
		  'verification':lambda x: x>0,
		  'alternatives':[('species','npart'),('species','frac'),('control','npart')] },
		{ 'name'        :'use_maxwell_juttner',
		  'dType'       :bool,
		  'mandatory'   :False},
		{ 'name'        :'dumpmask',
		  'dType'       :str,
		  'mandatory'   :False,
		  'allowedVals' :shared.dumpMasks },
		{ 'name'        :'dump',
		  'dType'       :bool,
		  'mandatory'   :False },
		{ 'name'        :'tracer',
		  'dType'       :bool,
		  'mandatory'   :False },
		{ 'name'        :'immobile',
		  'dType'       :bool,
		  'mandatory'   :False },
		{ 'name'        :'density',
		  'dType'       :(float,str),
		  'mandatory'   :True,
		  'validation'  :lambda x: x>0.0,
		  'alternatives':[('species','mass_density')] },
		{ 'name'        :'density_min',
		  'dType'       :float,
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'density_max',
		  'dType'       :float,
		  'mandatory'   :False },
		{ 'name'        :'mass_density',
		  'dType'       :(float,str),
		  'mandatory'   :True,
		  'validation'  :lambda x: x>0.0,
		  'alternatives':[('species','density')] },
		{ 'name'        :'temp_x',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_y',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_z',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_x_ev',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_y_ev',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_z_ev',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'temp_ev',
		  'dType'       :(float,str),
		  'mandatory'   :False,
		  'validation'  :lambda x: x>=0.0 },
		{ 'name'        :'drift_x',
		  'dType'       :(float,str),
		  'mandatory'   :False },
		{ 'name'        :'drift_y',
		  'dType'       :(float,str),
		  'mandatory'   :False },
		{ 'name'        :'drift_z',
		  'dType'       :(float,str),
		  'mandatory'   :False },
		{ 'name'        :'offset',
		  'dType'       :int,
		  'mandatory'   :False }
		# TODO: Add in particle migration and ionisation stuff
	]
}
